using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.UI;  public class Player1 : MonoBehaviour {     public float speed = 100.0F;    // 移動早さ     Animator animator;      /// <summary>     /// 攻撃状態ならtrue     /// </summary>     public bool IsAttacking;      /// <summary>     /// ダメージ状態ならtrue     /// </summary>     public bool IsDamaged;      /// <summary>     /// 死んだらtrue     /// </summary>     public bool IsDead;      [SerializeField]     Player2 Enemy;      //自分のHPバー     public GameObject hpbar;      // Use this for initialization     void Start()     {         animator = GetComponent<Animator>();     }      // Update is called once per frame     void Update()     {         // animator.SetBool("damage", isDamaged);          //ダーメージを受けていたら何もしない         //if (isDamaged)         //    return;         //死んでたら何もしない         if (IsDead)             return;          //        Debug.Log("Inputed");         // 矢印キーの入力情報を取得         var h = Input.GetAxis("Horizontal");         var v = Input.GetAxis("Vertical");          // 移動する向きを作成する         Vector2 direction = new Vector2(h, v).normalized;          // 移動する向きとスピードを代入          GetComponent<Rigidbody2D>().velocity = direction * speed;           if (Input.GetKeyDown(KeyCode.Z))         {
            //animator.SetBool("attack", true);
            animator.SetTrigger("Attack");         }         //else         //{         //    animator.SetBool("attack", false);         //}           if (Input.GetKeyDown(KeyCode.X))         {             // animator.SetBool("tornado", true);             animator.SetTrigger("Tornade");         }         //else         //{         //    animator.SetBool("tornado", false);         //}          if (Input.GetKeyDown(KeyCode.C))         {             // animator.SetBool("combo", true);             animator.SetTrigger("Combo");         }         //else         //{         //    animator.SetBool("combo", false);         //}       }      //ダメージを受ける     public void Damage()     {         //  既にダメージを受けていたら何もしない         if (IsDamaged)             return;          //死んでたら何もしない         if (IsDead)             return;                  //Debug.Log("Player 1 Damaged!");         IsDamaged = true;         // animator.SetBool("damage", isDamaged);         animator.SetTrigger("Damage");         StartCoroutine(damaged());      }      // ダメージを受けたフラグを管理するコルーチン       private IEnumerator damaged()     {         // n秒待機してから、ダメージ状態を解除する         yield return new WaitForSeconds(1.0f);         IsDamaged = false;     }      //ダメージを受けました     void OnCollisionStay2D(Collision2D col)     {         if (col.gameObject != Enemy.gameObject)             return;          // Debug.Log("Hit");          //ダメージ中は追加ダメージを受けない         if (IsDamaged)             return;          //死んでいたらダメージはない         if (IsDead)             return;          //敵が攻撃中ではないなら、ダメージにはならない         if (!Enemy.IsAttacking)             return;          //  on damage         var slider = hpbar.GetComponent<Slider>();         var hp = slider.value;         hp -= 4;         slider.value = hp;          if( hp > 0 )         {             Damage();         }         else         {             //HPが０以下なので、「そこまで！」             GameManager.Instance.GameSet(2);             animator.SetBool("die", true);         }     } } 